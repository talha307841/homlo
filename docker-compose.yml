version: '3.8'

services:
  # PostgreSQL Database with PostGIS
  postgres:
    image: postgis/postgis:16-3.4
    container_name: homlo-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: homlo
      POSTGRES_USER: homlo_user
      POSTGRES_PASSWORD: homlo_password
      POSTGRES_HOST_AUTH_METHOD: md5
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./infra/init-postgres.sql:/docker-entrypoint-initdb.d/init-postgres.sql:ro
    networks:
      - homlo-network

  # Redis for caching and WebSocket broker
  redis:
    image: redis:7-alpine
    container_name: homlo-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - homlo-network

  # MinIO for object storage
  minio:
    image: minio/minio:latest
    container_name: homlo-minio
    restart: unless-stopped
    environment:
      MINIO_ROOT_USER: homlo
      MINIO_ROOT_PASSWORD: homlo123
      MINIO_BUCKET_NAME: homlo-assets
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio_data:/data
    command: server /data --console-address ":9001"
    networks:
      - homlo-network

  # MinIO bucket initialization
  minio-create-bucket:
    image: minio/mc:latest
    container_name: homlo-minio-init
    restart: "no"
    depends_on:
      - minio
    environment:
      MINIO_ROOT_USER: homlo
      MINIO_ROOT_PASSWORD: homlo123
    command: >
      sh -c "
        sleep 10 &&
        mc alias set myminio http://minio:9000 homlo homlo123 &&
        mc mb myminio/homlo-assets --ignore-existing &&
        mc policy set public myminio/homlo-assets &&
        echo 'MinIO bucket created successfully'
      "
    networks:
      - homlo-network

  # FastAPI Backend Server
  api:
    build:
      context: ./apps/api
      dockerfile: Dockerfile
    container_name: homlo-api
    restart: unless-stopped
    environment:
      DATABASE_URL: postgresql://homlo_user:homlo_password@postgres:5432/homlo
      REDIS_URL: redis://redis:6379
      MINIO_ROOT_USER: homlo
      MINIO_ROOT_PASSWORD: homlo123
      MINIO_ENDPOINT: minio:9000
      MINIO_BUCKET_NAME: homlo-assets
      JWT_SECRET_KEY: homlo-super-secret-jwt-key-production-2024
      JWT_ALGORITHM: HS256
      ACCESS_TOKEN_EXPIRE_MINUTES: 15
      REFRESH_TOKEN_EXPIRE_DAYS: 7
    ports:
      - "8000:8000"
    volumes:
      - ./apps/api:/app
      - ./apps/api/uploads:/app/uploads
    depends_on:
      - postgres
      - redis
      - minio
    networks:
      - homlo-network

  # Celery Worker for background tasks
  celery-worker:
    build:
      context: ./apps/api
      dockerfile: Dockerfile
    container_name: homlo-celery-worker
    restart: unless-stopped
    command: celery -A app.celery worker --loglevel=info
    environment:
      DATABASE_URL: postgresql://homlo_user:homlo_password@postgres:5432/homlo
      REDIS_URL: redis://redis:6379
      MINIO_ROOT_USER: homlo
      MINIO_ROOT_PASSWORD: homlo123
      MINIO_ENDPOINT: minio:9000
      MINIO_BUCKET_NAME: homlo-assets
    volumes:
      - ./apps/api:/app
    depends_on:
      - postgres
      - redis
      - minio
    networks:
      - homlo-network

  # Celery Beat for scheduled tasks
  celery-beat:
    build:
      context: ./apps/api
      dockerfile: Dockerfile
    container_name: homlo-celery-beat
    restart: unless-stopped
    command: celery -A app.celery beat --loglevel=info
    environment:
      DATABASE_URL: postgresql://homlo_user:homlo_password@postgres:5432/homlo
      REDIS_URL: redis://redis:6379
      MINIO_ROOT_USER: homlo
      MINIO_ROOT_PASSWORD: homlo123
      MINIO_ENDPOINT: minio:9000
      MINIO_BUCKET_NAME: homlo-assets
    volumes:
      - ./apps/api:/app
    depends_on:
      - postgres
      - redis
      - minio
    networks:
      - homlo-network

  # Next.js Frontend App
  web:
    build:
      context: ./apps/web
      dockerfile: Dockerfile
    container_name: homlo-web
    restart: unless-stopped
    environment:
      NEXT_PUBLIC_API_URL: http://localhost:8000
      NEXT_PUBLIC_WS_URL: ws://localhost:8000
      NEXT_PUBLIC_MINIO_ENDPOINT: http://localhost:9000
      NEXT_PUBLIC_MINIO_BUCKET: homlo-assets
    ports:
      - "3000:3000"
    volumes:
      - ./apps/web:/app
      - /app/node_modules
      - /app/.next
    depends_on:
      - api
    networks:
      - homlo-network

  # Mailhog for development email testing
  mailhog:
    image: mailhog/mailhog:latest
    container_name: homlo-mailhog
    restart: unless-stopped
    ports:
      - "8025:8025"
      - "1025:1025"
    networks:
      - homlo-network
    profiles:
      - dev

  # Nginx Reverse Proxy (Optional - for production)
  nginx:
    image: nginx:alpine
    container_name: homlo-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./infra/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./infra/ssl:/etc/nginx/ssl:ro
    depends_on:
      - web
      - api
    networks:
      - homlo-network
    profiles:
      - production

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  minio_data:
    driver: local

networks:
  homlo-network:
    driver: bridge
